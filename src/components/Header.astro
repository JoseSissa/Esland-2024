---
import {
    getLangFromUrl,
    useTranslations,
    getRouteOfLanguage,
} from "@/i18n/utils";

import Logo from "./icons/Logo.astro";
import Button from "@/components/Button.astro";
import LaguageSelector from "@/components/LaguageSelector.astro";
import HamburgerIcon from "@/components/HamburguerIcon.astro";

// Internacionalizaci√≥n
import { geti18n } from "@/i18n";
import CloseMenu from "./CloseMenu.astro";
const { currentLocale } = Astro;
const i18n = geti18n({ currentLocale });

const path = Astro.url.pathname;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<header id="header-nav" class="fixed top-0 w-full py-4 px-8 lg:px-0 z-20">
    <div
        class="flex justify-between items-center w-full max-w-[1400px] mx-auto lg:px-20 md:gap-4 lg:gap-0"
    >
        <a href={getRouteOfLanguage(lang, "nav.inicio")} class="lg:w-1/4">
            <Logo class="w-9 lg:w-12" />
        </a>
        <button class="block md:hidden" id="hamburger-menu">
            <HamburgerIcon />
        </button>
        <nav
            id="menu"
            class="absolute top-0 left-0 w-screen h-screen flex justify-center items-center text-center bg-black/90 z-10 -translate-y-full
            md:relative md:w-2/4 md:h-full md:bg-transparent transition-transform duration-300 ease-in-out md:translate-y-0"
        >
            <button class="absolute top-7 right-9 md:hidden" id="close-menu">
                <CloseMenu />
            </button>
            <ul
                class="flex flex-col md:flex-row justify-center items-center gap-4"
            >
                <li>
                    <a
                        class:list={[
                            "inline-block px-1 md:text-base lg:text-xl text__glowing uppercase",
                            path === "/info" && "border-b",
                        ]}
                        href={getRouteOfLanguage(lang, "nav.info")}
                        >{t("nav.info")}</a
                    >
                </li>
                <li>
                    <a
                        class:list={[
                            "inline-block px-1 md:text-base lg:text-xl text__glowing uppercase",
                            path === "/archivo" && "border-b",
                        ]}
                        href={getRouteOfLanguage(lang, "nav.archivo")}
                        >{t("nav.archivo")}</a
                    >
                </li>
                <li>
                    <a
                        class:list={[
                            "inline-block px-1 md:text-base lg:text-xl text__glowing uppercase",
                            path === "/vota" && "border-b",
                        ]}
                        href={getRouteOfLanguage(lang, "nav.vota")}
                        >{t("nav.vota")}</a
                    >
                </li>
                <li>
                    <div class="block md:hidden lg:w-1/4 text-end">
                        <Button id="" styles="block" href="#">
                            {i18n.HEADER_BUTTON}
                        </Button>
                    </div>
                </li>
                <li>
                    <LaguageSelector class="block md:hidden right-0" />
                </li>
            </ul>
        </nav>
        <div class="hidden md:block lg:w-1/4 text-end">
            <Button id="" styles="" href="#">
                {i18n.HEADER_BUTTON}
            </Button>
        </div>
        <LaguageSelector class="hidden md:block md:text-xs lg:text-base" />
    </div>
</header>

<style>
    .text__glowing {
        transition: text-shadow 0.3s ease;
    }

    .text__glowing:hover {
        text-shadow: 1px 1px 20px #fff;
    }
</style>

<script>
    document.addEventListener("astro:page-load", () => {
        const buttonHamburger = document.getElementById("hamburger-menu");
        const closeMenu = document.getElementById("close-menu");
        const menu = document.getElementById("menu");

        const showHideMenu = () => menu?.classList.toggle("translate-y-0");

        if (buttonHamburger) {
            buttonHamburger.addEventListener("click", () => showHideMenu());
        }
        if (closeMenu) {
            closeMenu.addEventListener("click", () => showHideMenu());
        }
    });
</script>
